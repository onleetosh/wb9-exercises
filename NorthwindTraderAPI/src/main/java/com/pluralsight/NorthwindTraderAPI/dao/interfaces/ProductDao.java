/**
 * The ProductDao interface defines the contract for data access operations
 * related to Product objects. It provides methods for retrieving product data
 * from the data source.
 */

package com.pluralsight.NorthwindTraderAPI.dao.interfaces;

import com.pluralsight.NorthwindTraderAPI.models.Product;
import java.util.List;

public interface ProductDao {

    /**
     * Retrieves a list of all products from the data source.
     *
     * @return a List of Product objects representing all products in the database.
     */
    List<Product> getAll();


    /**
     * Retrieves a product by its unique ID from the data source.
     *
     * @param id the unique identifier of the product to retrieve.
     * @return the Product object matching the given ID, or null if no product is found.
     */
    Product getByProductId(int id);

    /**
     * Inserts a new product into the data source.
     *
     * @param product the Product object to insert into the database. The Product should
     *                contain details such as the name, category ID, and price. The ID
     *                will be auto-generated by the database and set in the Product object.
     * @return the inserted Product object with the generated ID populated.
     */
    Product insertProduct(Product product);

    /**
     * Updates an existing product in the data source.
     *
     * @param id the unique identifier of the product to update.
     * @param product the Product object containing the updated details (e.g., name,
     *                category ID, and price). The ID in the Product object is ignored
     *                as the target product is identified by the provided ID parameter.
     */
    void update(int id, Product product);

    /**
     * Deletes a product from the data source.
     *
     * @param id the unique identifier of the product to delete.
     */
    void delete(int id);
}